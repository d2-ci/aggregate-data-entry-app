{"version":3,"file":"index-B3adGSr6.js","sources":["../../src/D2App/plugin-legacy-custom-forms/content/external-css.js","../../src/D2App/plugin-legacy-custom-forms/content/external-scripts.js","../../src/D2App/plugin-legacy-custom-forms/get-base-external-files.js","../../src/D2App/plugin-legacy-custom-forms/load-form-shim.js","../../src/D2App/plugin-legacy-custom-forms/parse-form-content.js","../../src/D2App/plugin-legacy-custom-forms/index.jsx"],"sourcesContent":["const files = [\n    'javascripts/jQuery/ui/css/redmond/jquery-ui.css',\n    'css/widgets.css', // removed jquery overrides (makes everything super small)\n    'css/dhis-web-dataentry.css',\n]\n\nexport default files\n","/**\n * ToDo\n * 1. decide which scripts are necessary and should be bundled\n * 2. (maybe) concatenate the files in a single file (or few files) to simplify order logic and improve performance\n * 3. optimise that these scripts are not re-loaded every time\n *\n * What to do with all the date utilities? How common are they - is it easier to migrate to newer patterns\n *\n */\n\n// ! add form and entry.js from core\nconst files = [\n    'javascripts/jQuery/jquery.min.js',\n    'javascripts/jQuery/placeholders.jquery.min.js',\n    'javascripts/jQuery/jquery.utils.js',\n    'javascripts/jQuery/jquery.ext.js',\n    'javascripts/jQuery/jquery.metadata.js',\n    'javascripts/jQuery/jquery.tablesorter.min.js',\n    'javascripts/jQuery/jquery.upload-1.0.2.min.js',\n    'javascripts/jQuery/jquery.dhisAjaxSelect.js',\n    'javascripts/jQuery/ui/jquery-ui.min.js',\n    'javascripts/jQuery/ui/jquery.blockUI.js',\n    'javascripts/jQuery/jquery.validate.js',\n    'javascripts/jQuery/jquery.validate.ext.js',\n    'javascripts/jQuery/jquery.cookie.js',\n\n    'javascripts/jQuery/jquery.glob.js',\n    'javascripts/jQuery/jquery.date.js',\n    'javascripts/jQuery/jquery.tmpl.js',\n    'javascripts/jQuery/jquery.autogrow.js',\n    'javascripts/jQuery/jquery.fileupload.min.js',\n    // 'javascripts/underscore.min.js',\n    // 'javascripts/filesize.min.js',\n    'javascripts/dhis2/dhis2.util.js',\n    // 'javascripts/commons.js',\n    // 'javascripts/commons.ajax.js',\n    // 'javascripts/lists.js',\n    // 'javascripts/periodType.js',\n    // 'javascripts/date.js',\n    // 'javascripts/json2.js',\n    // 'javascripts/validationRules.js',\n    'javascripts/dhis2/dhis2.array.js',\n    'javascripts/dhis2/dhis2.select.js',\n    'javascripts/jQuery/calendars/jquery.calendars.min.js',\n    'javascripts/jQuery/calendars/jquery.calendars.plus.min.js',\n\n    // 'javascripts/moment/moment-with-langs.min.js',\n    // 'select2/select2.min.js',\n    'javascripts/floatThead/jquery.floatThead.min.js',\n\n    // ? all the calendar and date utilties take up the bulk of space - maybe they can be bundled optionally?\n    // jquery calendars\n    'javascripts/dhis2/dhis2.period.js',\n    'javascripts/dhis2/dhis2.selected.js',\n    'javascripts/dhis2/dhis2.comparator.js',\n    'javascripts/dhis2/dhis2.availability.js',\n    'javascripts/dhis2/dhis2.trigger.js',\n    'javascripts/dhis2/dhis2.sharing.js',\n    'javascripts/dhis2/dhis2.validation.js',\n    'javascripts/dhis2/dhis2.storage.ss.js',\n    'javascripts/dhis2/dhis2.storage.ls.js',\n    'javascripts/dhis2/dhis2.storage.idb.js',\n    'javascripts/dhis2/dhis2.storage.memory.js',\n    'javascripts/dhis2/dhis2.storage.js',\n    'javascripts/dhis2/dhis2.contextmenu.js',\n    'javascripts/dhis2/dhis2.appcache.js',\n    'javascripts/dhis2/dhis2.translate.js',\n\n    // form-entry\n    // 'javascripts/ouwt/ouwt.js',\n    'javascripts/data-entry/form.js',\n    'javascripts/data-entry/entry.js',\n    // 'javascripts/data-entry/entry.fileresource.js',\n    // 'javascripts/data-entry/history.js',\n]\n\nexport default files\n","import externalCSS from './content/external-css.js'\nimport externalScripts from './content/external-scripts.js'\n\nconst getBaseExternalFiles = () => {\n    const scriptsToAdd = externalScripts.map((scriptFile) => {\n        const script = document.createElement('script')\n        script.src = `legacy-custom-forms/${scriptFile}`\n        // * making sure that the script are sync to avoid race conditions and to copy the loading behaviour of the struts templates\n        script.async = false\n        return script\n    })\n\n    const cssToAdd = externalCSS.map((cssFile) => {\n        // ? what other CSS files we should include? the base CSS from old Struts - would people expect the look to be similar to the old version\n        const style = document.createElement('link')\n        style.href = `legacy-custom-forms/${cssFile}`\n        style.type = 'text/css'\n        style.rel = 'stylesheet'\n        // head.append(style)\n        return style\n    })\n\n    return { externalScripts: scriptsToAdd, externalCSS: cssToAdd }\n}\n\nexport default getBaseExternalFiles\n","/*\n! The following part is the shim to make the transition of legacy forms as smooth as possible\n! it consists of several workarounds for the \"contracts\" that custom forms depended on\n! these contracts are either global JS objects, for example under de.dataSets and other objects exposed mostly in form.js \n! or other implicit contract like HTML elements that custom forms used to get some values (i.e. #selectedPeriodId)\n*/\n\nconst loadCustomFormShim = ({\n    periodId,\n    dataSetId,\n    attributeOptionComboSelection,\n    baseUrl,\n    metadata,\n    orgUnitId,\n    hideAlert,\n    showAlert,\n}) => {\n    // * adding periodId and dataSetId to hidden selects so that previous jQuery code works as it is\n    // ToDo: is getting period from selectedPeriodId a common enough pattern to have a workaround?\n    const periodInput = document.createElement('input')\n    periodInput.id = 'selectedPeriodId'\n    periodInput.value = periodId\n    periodInput.hidden = true\n\n    const dataSetInput = document.createElement('input')\n    dataSetInput.id = 'selectedDataSetId'\n    dataSetInput.value = dataSetId\n    dataSetInput.hidden = true\n\n    if (attributeOptionComboSelection) {\n        Object.keys(attributeOptionComboSelection).forEach((selection) => {\n            const aocInput = document.createElement('input')\n            aocInput.id = `category-${selection}`\n            aocInput.value = attributeOptionComboSelection[selection]\n            aocInput.hidden = true\n            document.body.append(aocInput)\n        })\n    }\n\n    document.body.append(periodInput, dataSetInput)\n\n    // ! the organisation unit was typically retrieved from  selection.getSelected()[0]; based on OUWT.js\n    // Todo: fake Selection API (https://developer.mozilla.org/en-US/docs/Web/API/Selection) as well? so that code like this works: dhis2.de.currentOrganisationUnitId = selection.getSelected()[0]\n    window.dhis2.de.currentOrganisationUnitId = orgUnitId\n    window.dhis2.de.currentDataSetId = dataSetId\n    window.dhis2.de.currentPeriodId = periodId // ! doesn't exist in original object but seems reasonable to provide\n    window.dhis2.de.defaultCategoryCombo = Object.values(\n        metadata.categoryCombos\n    )?.find?.((co) => co.isDefault)?.id\n    window.dhis2.de.categories = metadata.categories\n    window.dhis2.de.categoryCombos = metadata.categoryCombos\n    window.dhis2.de.dataElements = metadata.dataElements\n    window.dhis2.de.optionSets = metadata.optionSets\n\n    // ?ToDo: these also used to be loaded from metadata in form.js - there is no direct equivalent now, what do we do with them?\n    // dhis2.de.emptyOrganisationUnits = metaData.emptyOrganisationUnits;\n    // dhis2.de.significantZeros = metaData.significantZeros;\n    // dhis2.de.indicatorFormulas = metaData.indicatorFormulas; //? is this the same as indicators?\n    // dhis2.de.lockExceptions = metaData.lockExceptions;\n\n    const dataSetsForForm = {}\n    for (const [key, value] of Object.entries(metadata.dataSets)) {\n        dataSetsForForm[key] = {\n            ...value,\n            //? custom forms expect periodId - do we update the forms, or update the object (and where do we stop with these shims!)?\n            periodId: value?.period,\n        }\n    }\n\n    window.dhis2.de.dataSets = dataSetsForForm\n\n    //* make sure that all AJAX requests go to the Backend Url\n    //* there are a variety of workarounds that people do currently but this should make them obsolete (as well as help with local development)\n    //! it's also a pseudo-security measure, as it basically ensures that all calls are to the DHIS2 server - no outside API calls\n    window.DHIS_BASE_URL = baseUrl + '/'\n    window.$.ajaxSetup({\n        beforeSend: function (xhr, options) {\n            if (!options.url?.match(baseUrl)) {\n                options.url = baseUrl + options.url\n            }\n            options.xhrFields = {\n                ...options.xhrFields,\n                withCredentials: true,\n            }\n        },\n    })\n\n    /**\n     * ! these global objects were initialised as part of main.vm (dhis-web/dhis-web-commons-resources/src/main/webapp/main.vm) for calendar\n     *\n     * ? Do we want to support multi-calendar in this custom form world (please say No!)\n     */\n    window.dhis2.period.format = '$dateFormat.js'\n    window.dhis2.period.calendar = window.$.calendars.instance('gregorian')\n    window.dhis2.period.generator = new window.dhis2.period.PeriodGenerator(\n        window.dhis2.period.calendar,\n        window.dhis2.period.format\n    )\n    window.dhis2.period.picker = new window.dhis2.period.DatePicker(\n        window.dhis2.period.calendar,\n        window.dhis2.period.format\n    )\n\n    window.dhis2.shim = window.dhis2.shim || {}\n    window.dhis2.shim.showAlert = showAlert\n    window.dhis2.shim.hideAlert = hideAlert\n    window.setHeaderDelayMessage = (message) => {\n        showAlert({ message })\n    }\n\n    window.dhis2.shim.metadata = metadata\n}\n\nexport default loadCustomFormShim\n","const parseFormContent = (doc) => {\n    const scriptsFromFrom = doc.getElementsByTagName('script')\n    const stylesFromForm = doc.getElementsByTagName('style')\n\n    const scriptsList = []\n    Array.from(scriptsFromFrom).forEach((script) => {\n        // * removing the scripts from the form HTML, keeping them in a copy that gets appended at the end\n        // * after all base JS is loaded (jQuery etc..)\n        const scriptCopy = document.createElement('script')\n        scriptCopy.textContent = script.textContent\n        scriptCopy.async = false\n        scriptsList.push(scriptCopy)\n        script.remove()\n    })\n\n    return { scripts: scriptsList ?? [], styles: stylesFromForm ?? [] }\n}\n\nexport default parseFormContent\n","import { useAlert, useConfig } from '@dhis2/app-runtime'\nimport PropTypes from 'prop-types'\nimport React, { useEffect } from 'react'\nimport getBaseExternalFiles from './get-base-external-files.js'\nimport loadCustomFormShim from './load-form-shim.js'\nimport parseFormContent from './parse-form-content.js'\n\n/* \n! Other todos/notes:\n- [x] The core: load all JS files defined in the old Struts app, and a shim for commonly used global properties and functions (**ongoing**)\n- [x]  support `dhis2.de.currentOrganisationUnitId` and other properties available in `dhis2.de`\n- [ ] expose a spinner/loader - _the idea was to use the loader from the new data-entry app, but this is technically difficult as it causes a re-render of the form. Likely we will just support whatever loader the custom form had in the code (i.e. jQuery UI)_\n- [ ] update all the `form.js` that are deprecated (i.e. all the calls to `.action` struts routes) (**ongoing**)  \n    - [ ] update calls to legacy API `x.action`\n    - [ ] jQuery.getJSON( '../dhis-web-commons-ajax-json/getCategoryOptionCombos.action', {\n- [ ] other operations: offline, completing, validation, printing\n- [ ] support date fields (and other field types)\n- [x]  show error messages with useAlert (proxy setHeaderDelayMessage to useAlert)\n- [x]  support inline CSS\n- [x]  API requests to relative path: '../api/data....' (handled with jQuery AJAX override)\n- [x]  Support custom tabs: a lot of custom tabs with jquery plugins: $( \"#tabs\" ).tabs();\n- [x]  jquery UI: floatThead, tabs,\n- [ ] decide what to bring over from the old Struts `/src/main/webapp/dhis-web-commons/javascripts/commons.js`\n    - [ ] show/hide loader\n- [ ] ensure events events:  dhis2.util.on(dhis2.de.event.formReady\", dhis2.de.event.dataValuesLoaded, dhis2.de.event.dataValueSaved, dhis2.de.event.completed\n- [ ] Other implicit contracts: IDs to data elements, `$('#morb')` `$('#mort')`??, window.location.pathname.indexOf(\"dataentry\")\n- [ ] _Possible_  future optimisations: \n- [ ] concatenate all JS for faster loading\n- [ ] maybe make loading some JS files optional (through dataStore seting?)\n    - [ ] Provide a guide (script?) to replace jQuery operations as they're mostly redundant in modern browsers now \n- [ ] ensure the external scripts are cached on production (or reused by the plugin) etc...\n \n! ToDos for new custom forms\n- interface for selecting items, similar to: document.querySelector(\"#hiTm0oSRRRi-HoIsxzhEmia-val\");\n\n*/\n\nconst { externalCSS, externalScripts } = getBaseExternalFiles()\n\nconst LegacyCustomFormPlugin = (props) => {\n    /* \n    This is what get passed from data-entry app and effectively the contract for custom form plugins (legacy or not)\n    */\n    const {\n        htmlCode,\n        // initialValues,\n        metadata,\n        // dataSet,\n        // saveValue,\n        periodId,\n        dataSetId,\n        orgUnitId,\n        attributeOptionComboSelection,\n    } = props\n\n    console.log('[custom-forms] 🏁 Legacy Custom Form Plugin starting 🏁')\n\n    const config = useConfig()\n\n    // * Load the htmlCode into a doc to allow manipulating it\n    const doc = new DOMParser().parseFromString(htmlCode, 'text/html')\n    const parsedContent = parseFormContent(doc)\n\n    // * Extracting the form's HTML, JS scripts and CSS\n    // The HTML would end up set as the plugin content as it is\n    // The JS and CSS are manipulated first to ensure they're loaded after the base styles and scripts (the ones that were part of  the Struts templates in DHIS2 pre-41 by default)\n    const formHtml = doc.body.innerHTML\n    const formScripts = parsedContent.scripts\n    const formStyles = parsedContent.styles\n\n    // * The shim will proxy the legacy setHeaderDelayMessage that was used to show alerts to the modern AlertBar stack\n    const { show: showAlert, hide: hideAlert } = useAlert(\n        ({ message }) => message,\n        { warning: true }\n    )\n\n    useEffect(() => {\n        if (!htmlCode || !formStyles || !formScripts) {\n            return\n        }\n\n        // ! Order matters\n        // 1. load external JS first (jquery etc..)\n        // 2. Append external CSS (jQuery UI, old data-entry styles etc..)\n        // 3. Append inline styles that comes from the form itself\n        // 4. Load the shim\n        // 5. Load JS scripts from the form itself\n        document.body.append(...externalScripts)\n        const head = document.getElementsByTagName('head')[0]\n        head.append(...externalCSS, ...formStyles)\n\n        // ! loading the shim needs to be delayed in order to ensure that the base scripts (jquery et al.) are loaded first.\n        // * That order was implicit in the old Struts app, but it's not easy to guarantee in the React realm\n        // ToDo: research a better less-hacky way to control the order of loading external scripts\n        setTimeout(() => {\n            loadCustomFormShim({\n                periodId,\n                dataSetId,\n                attributeOptionComboSelection,\n                baseUrl: config?.systemInfo?.contextPath,\n                scripts: formScripts,\n                metadata,\n                orgUnitId,\n                hideAlert,\n                showAlert,\n            })\n\n            // * appending the scripts that are part of the custom form at the end\n            // * (after jQuery and dhis2 utils and the shim objects are loaded as they often depend on those)\n            document.body.append(...formScripts)\n\n            //! Kick off everything 🚀\n            window.dhis2?.de?.loadForm()\n        }, 1000)\n    }, [\n        config?.systemInfo?.contextPath,\n        dataSetId,\n        hideAlert,\n        htmlCode,\n        metadata,\n        metadata.dataSets,\n        orgUnitId,\n        formScripts,\n        periodId,\n        showAlert,\n        formStyles,\n        attributeOptionComboSelection,\n    ])\n\n    return (\n        <div>\n            <div>\n                <div\n                    // ? the parent style in old Struts world - do we keep it?\n                    className=\"cde-NORMAL\"\n                    dangerouslySetInnerHTML={{ __html: formHtml }}\n                ></div>\n            </div>\n        </div>\n    )\n}\n\nLegacyCustomFormPlugin.propTypes = {\n    dataSetId: PropTypes.string.isRequired,\n    htmlCode: PropTypes.string.isRequired,\n    orgUnitId: PropTypes.string.isRequired,\n    periodId: PropTypes.string.isRequired,\n    attributeOptionComboSelection: PropTypes.object,\n    dataSet: PropTypes.shape({ displayName: PropTypes.string }),\n    initialValues: PropTypes.shape({}),\n    metadata: PropTypes.object,\n}\nexport default LegacyCustomFormPlugin\n"],"names":["files","getBaseExternalFiles","scriptsToAdd","externalScripts","map","scriptFile","script","document","createElement","src","async","cssToAdd","externalCSS","cssFile","style","href","type","rel","loadCustomFormShim","periodId","dataSetId","attributeOptionComboSelection","baseUrl","metadata","orgUnitId","hideAlert","showAlert","periodInput","id","value","hidden","dataSetInput","Object","keys","forEach","selection","aocInput","body","append","window","dhis2","de","currentOrganisationUnitId","currentDataSetId","currentPeriodId","defaultCategoryCombo","values","categoryCombos","find","co","isDefault","categories","dataElements","optionSets","dataSetsForForm","key","entries","dataSets","period","DHIS_BASE_URL","$","ajaxSetup","beforeSend","xhr","options","url","match","xhrFields","withCredentials","format","calendar","calendars","instance","generator","PeriodGenerator","picker","DatePicker","shim","setHeaderDelayMessage","message","parseFormContent","doc","scriptsFromFrom","getElementsByTagName","stylesFromForm","scriptsList","Array","from","scriptCopy","textContent","push","remove","scripts","styles","LegacyCustomFormPlugin","props","htmlCode","console","log","config","useConfig","DOMParser","parseFromString","parsedContent","formHtml","innerHTML","formScripts","formStyles","show","hide","useAlert","warning","useEffect","setTimeout","systemInfo","contextPath","loadForm","jsx","__html","propTypes","PropTypes","string","isRequired","object","dataSet","shape","displayName","initialValues"],"mappings":"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"}